<!-- @author: Jack Ma	
	 Part of UIS CSC 478 Group Project - Team Grammers
	 Feb 2020 - May 2020 -->
<!--This page contains all the SQL instructions used by the controllers through TimeManagementRepository.java-->
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.uis.csc478.timemanagement.repository.TimeManagementRepository">
  <select id="findEmployeeById" resultType="edu.uis.csc478.timemanagement.model.Employee">
    select * from employee where id = #{id}
  </select>
  <insert id="insertTimeClockIn" parameterType="edu.uis.csc478.timemanagement.model.TimeClock">
    insert into TimeClock(timeClockId, Id, name, clockDate, timeIn, status)
    values (next value for seq_timeclockId, #{id}, #{name}, #{clockDate}, #{timeIn}, #{status})
  </insert>
  <update id="insertTimeClockOut" parameterType="edu.uis.csc478.timemanagement.model.TimeClock">
    update TimeClock
    set timeOut = #{timeOut}, status = #{status}
    where id = #{id} and clockDate = #{clockDate} and timeOut is null
  </update>
  <select id="findTimeClockEntries" resultType="edu.uis.csc478.timemanagement.model.TimeClock">
    select t.* 
      from timeClock t 
     inner join employee e on e.id = t.id
     where e.managerId = #{managerId}
    <if test="date != null"> and t.clockDate = #{date}</if>	
    <if test="id > 0"> and t.id = #{id}</if>
    <if test="status != null"> and t.status = #{status}</if>
  </select> 
  <select id="findTimeClockEntry" resultType="edu.uis.csc478.timemanagement.model.TimeClock">
    select * from timeClock 
	where timeClockId = #{tcId}
  </select> 
  <update id="updateEmployeeTimeOff" parameterType="map">
	update Employee 
	set availablePTO = availablePTO - #{PTO},
		usedPTO = usedPTO + #{PTO},
		availableSick = availableSick - #{sick},
		usedSick = usedSick + #{sick},
		availableFloater = availableFloater - #{floater},
		usedFloater = usedFloater + #{floater},
		usedUnpaid = usedUnpaid + #{unpaid}
	where id = #{id}
  </update>
  <insert id="insertTimeOffRequest" parameterType="edu.uis.csc478.timemanagement.model.TimeOff">
	insert into TimeOff(timeOffId, id, name, startDate, endDate, ptoRequested, sickRequested, floaterRequested, unpaidRequested, Status)
	values (next value for seq_timeoffId, #{id}, #{name}, #{startDate}, #{endDate}, #{ptoRequested}, #{sickRequested}, #{floaterRequested}, #{unpaidRequested}, #{status})
  </insert>  
  <select id="findSubordinates" resultType="edu.uis.csc478.timemanagement.model.Employee">
    select * from Employee where managerId = #{id} order by name
  </select> 
  <update id="approveEmployeeTimeClock" parameterType="map">
    update TimeClock
    set status = #{status}
    where timeClockId = #{tcId}
  </update> 
  <update id="approveEmployeeTimeOff" parameterType="map">
    update TimeOff
    set status = #{status}
    where timeOffId = #{toId}
  </update> 
  <select id="findTimeOffEntries" resultType="edu.uis.csc478.timemanagement.model.TimeOff">
    select t.* from timeOff t
    inner join Employee e on e.id = t.id
     where e.managerId = #{managerId}
    <if test="employeeId > 0"> and t.id = #{employeeId}</if>
    <if test="status != null"> and t.status = #{status}</if>
    order by startDate
  </select>
    <select id="findTimeOffEntry" resultType="edu.uis.csc478.timemanagement.model.TimeOff">
    select * from timeOff 
	where timeOffId = #{toId}
  </select> 
  <update id="refundTimeOff" parameterType="edu.uis.csc478.timemanagement.model.TimeOff">
    update Employee
    set availablePTO = availablePTO + #{PTORequested}
    	usedPTO = usedPTO - #{PTORequested}
    	availableSick = availableSick + #{sickRequested},
		usedSick = usedSick - #{sickRequested},
		availableFloater = availableFloater + #{floaterRequested},
		usedFloater = usedFloater - #{floaterRequested}
    where id = #{id}
  </update> 
</mapper>